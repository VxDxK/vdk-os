#ifndef VDK_OS_MULTIBOOT_STUFF_HPP
#define VDK_OS_MULTIBOOT_STUFF_HPP

#include <cstdint>

enum multiboot_tag_type {
    MULTIBOOT_TAG_TYPE_END = 0,
    MULTIBOOT_TAG_TYPE_CMDLINE = 1,
    MULTIBOOT_TAG_TYPE_BOOT_LOADER_NAME = 2,
    MULTIBOOT_TAG_TYPE_MODULE = 3,
    MULTIBOOT_TAG_TYPE_BASIC_MEMINFO = 4,
    MULTIBOOT_TAG_TYPE_BOOTDEV = 5,
    MULTIBOOT_TAG_TYPE_MMAP = 6,
    MULTIBOOT_TAG_TYPE_VBE = 7,
    MULTIBOOT_TAG_TYPE_FRAMEBUFFER = 8,
    MULTIBOOT_TAG_TYPE_ELF_SECTIONS = 9,
    MULTIBOOT_TAG_TYPE_APM = 10,
    MULTIBOOT_TAG_TYPE_EFI32 = 11,
    MULTIBOOT_TAG_TYPE_EFI64 = 12,
    MULTIBOOT_TAG_TYPE_SMBIOS = 13,
    MULTIBOOT_TAG_TYPE_ACPI_OLD = 14,
    MULTIBOOT_TAG_TYPE_ACPI_NEW = 15,
    MULTIBOOT_TAG_TYPE_NETWORK = 16,
    MULTIBOOT_TAG_TYPE_EFI_MMAP = 17,
    MULTIBOOT_TAG_TYPE_EFI_BS = 18,
    MULTIBOOT_TAG_TYPE_EFI32_IH = 19,
    MULTIBOOT_TAG_TYPE_EFI64_IH = 20,
    MULTIBOOT_TAG_TYPE_LOAD_BASE_ADDR = 21
};

struct multiboot_tag {
    uint32_t type;
    uint32_t size;
};

#endif //VDK_OS_MULTIBOOT_STUFF_HPP
